<Page x:Class="CodeHub.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:AD="using:Microsoft.Advertising.WinRT.UI"
      xmlns:control="using:CodeHub.Controls"
      xmlns:converters="using:CodeHub.Converters"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:i="using:Microsoft.Xaml.Interactivity"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:model="using:CodeHub.Models"
      xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
      xmlns:toolkitControl="using:Microsoft.Toolkit.Uwp.UI.Controls"
      mc:Ignorable="d">
    <i:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.LoadCommand}" />
        </core:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    <Page.Resources>
        <DataTemplate x:Key="HamMenuItemTemplate" x:DataType="model:HamItem">
            <Grid Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Rectangle Width="6"
                           Height="45"
                           Margin="-12,0,0,0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Fill="{StaticResource AppPrimaryColorBrush}"
                           Visibility="{x:Bind SelectedVisual, Mode=TwoWay}" />

                <Viewbox Grid.Column="0"
                         MaxWidth="18"
                         MaxHeight="18">
                    <Path Data="{x:Bind Symbol}" StrokeThickness="0">
                        <i:Interaction.Behaviors>
                            <core:DataTriggerBehavior Binding="{x:Bind IsSelected, Mode=TwoWay}" Value="True">
                                <core:ChangePropertyAction PropertyName="Fill" Value="{StaticResource AppPrimaryColorBrush}" />
                            </core:DataTriggerBehavior>
                            <core:DataTriggerBehavior Binding="{x:Bind IsSelected, Mode=TwoWay}" Value="False">
                                <core:ChangePropertyAction PropertyName="Fill" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
                            </core:DataTriggerBehavior>
                        </i:Interaction.Behaviors>
                    </Path>
                </Viewbox>

                <TextBlock Grid.Column="1"
                           Margin="24,0,0,0"
                           FontSize="13"
                           VerticalAlignment="Center"
                           Text="{x:Bind Label}">
                    <i:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{x:Bind IsSelected, Mode=TwoWay}" Value="True">
                            <core:ChangePropertyAction PropertyName="Foreground" Value="{StaticResource AppPrimaryColorBrush}" />
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind IsSelected, Mode=TwoWay}" Value="False">
                            <core:ChangePropertyAction PropertyName="Foreground" Value="{ThemeResource ApplicationForegroundThemeBrush}" />
                        </core:DataTriggerBehavior>
                    </i:Interaction.Behaviors>
                </TextBlock>
            </Grid>

        </DataTemplate>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" x:Name="BooleanToVisibilityConverter" />
        <converters:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter" x:Name="ReverseBooleanToVisibilityConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" x:Name="InverseBooleanConverter" />
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup" CurrentStateChanged="OnCurrentStateChanged">
                <VisualState x:Name="Mobile">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="320" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BottomAppBar.Visibility" Value="Visible" />
                        <Setter Target="HamButton.Visibility" Value="Collapsed" />
                        <Setter Target="HeaderPanel.Height" Value="40" />
                        <Setter Target="SearchSymbol.MaxHeight" Value="19" />
                        <Setter Target="SearchSymbol.MaxWidth" Value="19" />
                        <Setter Target="HeaderText.MaxWidth" Value="195" />
                        <Setter Target="profileEllipse.Visibility" Value="Visible" />
                        <Setter Target="moreButton.Visibility" Value="Visible"/>
                        <Setter Target="UnreadNotifIndicator.Margin" Value="0 8 12 0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BottomAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="HamButton.Visibility" Value="Visible" />
                        <Setter Target="HamSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="profileEllipse.Visibility" Value="Collapsed" />
                        <Setter Target="moreButton.Visibility" Value="Collapsed"/>
                        <Setter Target="UnreadNotifIndicator.Margin" Value="0 12 12 0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DesktopEx">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="BottomAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="HamButton.Visibility" Value="Visible" />
                        <Setter Target="HamSplitView.DisplayMode" Value="Inline" />
                        <Setter Target="profileEllipse.Visibility" Value="Collapsed" />
                        <Setter Target="moreButton.Visibility" Value="Collapsed"/>
                        <Setter Target="UnreadNotifIndicator.Margin" Value="0 12 12 0"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="MainGrid"
              Background="Transparent"
              Visibility="{x:Bind ViewModel.isLoggedin, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <RelativePanel x:Name="HeaderPanel"
                           Grid.Row="0"
                           Height="48"
                           Background="{ThemeResource SystemChromeLowColor}"
                           Canvas.ZIndex="1">
                <toolkitControl:RoundImageEx x:Name="profileEllipse"
                                             Width="30"
                                             Height="30"
                                             Margin="12 4 0 4"
                                             BorderBrush="{StaticResource AppPrimaryColorBrush}"
                                             BorderThickness="1"
                                             RelativePanel.AlignVerticalCenterWith="HamButton"
                                             RelativePanel.RightOf="HamButton"
                                             CornerRadius="999"
                                             DecodePixelHeight="30"
                                             DecodePixelType="Logical"
                                             DecodePixelWidth="30"
                                             IsCacheEnabled="True"
                                             Stretch="UniformToFill"
                                             Source="{x:Bind ViewModel.User.AvatarUrl, Mode=OneWay}"
                                             Tapped="{x:Bind ViewModel.AppBarProfile_Tapped}"/>
                <Button Name="HamButton"
                        Click="HamButton_Click"
                        RelativePanel.AlignVerticalCenterWithPanel="True"
                        Style="{StaticResource SplitViewTogglePaneButtonStyle}" />

                <Grid Margin="12,0,0,0"
                      RelativePanel.AlignVerticalCenterWith="HamButton"
                      RelativePanel.RightOf="profileEllipse">
                    <TextBlock Name="HeaderText"
                               FontFamily="Segoe UI"
                               FontSize="16"
                               FontWeight="Bold"
                               Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                               Text="{x:Bind ViewModel.HeaderText, Mode=OneWay}"
                               TextTrimming="CharacterEllipsis" />
                </Grid>
                <Button x:Name="SearchButton"
                        Width="50"
                        Height="48"
                        Padding="12 0 12 0"
                        Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                        RelativePanel.AlignVerticalCenterWith="HamButton"
                        RelativePanel.LeftOf="notifButton"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.NavigateToSearch}">
                    <Viewbox x:Name="SearchSymbol"
                             MaxWidth="21"
                             MaxHeight="21">
                        <SymbolIcon Foreground="{ThemeResource ApplicationForegroundThemeBrush}" Symbol="Find" />
                    </Viewbox>
                </Button>
                <Button x:Name="notifButton"
                        Width="50"
                        Height="48"
                        RelativePanel.LeftOf="moreButton"
                        RelativePanel.AlignVerticalCenterWithPanel="True"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.NavigateToNotifications}">
                    <Path Data="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"
                          Fill="{ThemeResource ApplicationForegroundThemeBrush}">
                        <Path.RenderTransform>
                            <CompositeTransform ScaleX="1.3" ScaleY="1.3" />
                        </Path.RenderTransform>
                    </Path>
                </Button>
                <Grid x:Name="UnreadNotifIndicator"
                      RelativePanel.LeftOf="moreButton"
                      RelativePanel.AlignTopWith="notifButton"
                      Visibility="{x:Bind ViewModel.IsNotificationsUnread,Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                    <Ellipse Width="12"
                             Height="12"
                             Fill="{ThemeResource SystemChromeLowColor}"/>
                    <Ellipse Width="10"
                             Height="10"
                             Fill="{StaticResource AppPrimaryColorBrush}"/>
                </Grid>
                <Button x:Name="moreButton"
                        Width="50"
                        Height="48"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.AlignVerticalCenterWithPanel="True"
                        Style="{StaticResource ActionButtonStyle}"
                        Padding="12 0 12 0">
                    <Button.Flyout>
                        <Flyout>
                            <Button Style="{StaticResource ActionButtonStyle}"
                                    Margin="-7"
                                    Tapped="SignOutFlyout_Tapped">
                                <RelativePanel>
                                    <Ellipse x:Name="avatar"
                                         Width="30"
                                         Height="30"
                                         Margin="0 0 10 0"
                                         RelativePanel.AlignVerticalCenterWithPanel="True">
                                        <Ellipse.Fill>
                                            <ImageBrush>
                                                <ImageBrush.ImageSource>
                                                    <BitmapImage UriSource="{x:Bind ViewModel.User.AvatarUrl, Mode=OneWay, FallbackValue='ms-appx:///Assets/profile-placeholder.png'}" 
                                                             DecodePixelHeight="26"
                                                             DecodePixelType="Logical"
                                                             DecodePixelWidth="26"/>
                                                </ImageBrush.ImageSource>
                                            </ImageBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>

                                    <TextBlock x:Name="email"
                                           FontSize="10"
                                           Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                           RelativePanel.RightOf="avatar"
                                           Text="{x:Bind ViewModel.Email, Mode=OneWay, FallbackValue=' '}" />
                                    <TextBlock x:Name="signout"
                                           x:Uid="signOut"
                                           Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                           RelativePanel.AlignLeftWith="email"
                                           RelativePanel.Below="email" />
                                </RelativePanel>
                            </Button>
                        </Flyout>
                    </Button.Flyout>
                    <SymbolIcon Symbol="More" 
                                Foreground="{ThemeResource ApplicationForegroundThemeBrush}"/>
                </Button>
            </RelativePanel>

            <SplitView x:Name="HamSplitView"
                       Grid.Row="1"
                       x:FieldModifier="Public"
                       DisplayMode="Overlay"
                       OpenPaneLength="270"
                       PaneBackground="Transparent">
                <SplitView.Pane>
                    <Grid>
                        <Border x:Name="BlurBorderHamburger"/>
                        <RelativePanel Name="HamRelative"
                                       Padding="0 10 0 0"
                                       Background="Transparent">
                            <toolkitControl:RoundImageEx x:Name="avatarEllipse"
                                                         Margin="16 12 12 12"
                                                         CornerRadius="999"
                                                         Width="85"
                                                         Height="85"
                                                         DecodePixelHeight="85"
                                                         DecodePixelType="Logical"
                                                         DecodePixelWidth="85"
                                                         IsCacheEnabled="True"
                                                         Stretch="UniformToFill"
                                                         Source="{x:Bind ViewModel.User.AvatarUrl, Mode=OneWay}"
                                                         Tapped="{x:Bind ViewModel.AppBarProfile_Tapped}"
                                                         Visibility="{x:Bind ViewModel.isLoggedin, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"/>

                            <StackPanel Orientation="Vertical"
                                        RelativePanel.AlignVerticalCenterWith="avatarEllipse"
                                        RelativePanel.RightOf="avatarEllipse"
                                        Visibility="{x:Bind ViewModel.isLoggedin, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Margin="0 0 0 4"
                                           FontSize="14"
                                           FontWeight="Medium"
                                           Text="{x:Bind ViewModel.User.Name, Mode=OneWay}" />
                                <TextBlock Margin="0 0 0 10"
                                           FontSize="11.5"
                                           FontWeight="SemiBold"
                                           Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                           Text="{x:Bind ViewModel.User.Login, Mode=OneWay}" />
                            </StackPanel>

                            <ListView Name="HamListView"
                                      Width="270"
                                      IsItemClickEnabled="True"
                                      ItemClick="HamListView_ItemClick"
                                      ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                      ItemTemplate="{StaticResource HamMenuItemTemplate}"
                                      ItemsSource="{x:Bind ViewModel.HamItems, Mode=OneWay}"
                                      RelativePanel.Below="avatarEllipse"
                                      SelectionMode="Single" />

                            <ListView x:Name="HamListViewBottom"
                                      Width="270"
                                      ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                      RelativePanel.AlignBottomWithPanel="True"
                                      RelativePanel.AlignHorizontalCenterWithPanel="True"
                                      SelectionMode="Single">

                                <ListViewItem Visibility="{x:Bind ViewModel.isLoggedin, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                                    <i:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="Tapped">
                                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SignOutCommand}" />
                                        </core:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                    <RelativePanel Width="270">
                                        <Ellipse x:Name="smallAvatarEllipse"
                                                 Width="27"
                                                 Height="27"
                                                 Margin="0 0 10 0"
                                                 RelativePanel.AlignVerticalCenterWithPanel="True">
                                            <Ellipse.Fill>
                                                <ImageBrush ImageSource="{x:Bind ViewModel.User.AvatarUrl, FallbackValue='ms-appx:///Assets/profile-placeholder.png', Mode=OneWay}" />
                                            </Ellipse.Fill>
                                        </Ellipse>

                                        <TextBlock x:Name="EmailText"
                                                   FontSize="10"
                                                   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                                   RelativePanel.RightOf="smallAvatarEllipse"
                                                   Text="{x:Bind ViewModel.Email, Mode=OneWay, FallbackValue=' ', TargetNullValue=' '}" />
                                        <TextBlock x:Name="SignoutText"
                                                   x:Uid="signOut"
                                                   FontSize="13"
                                                   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                                   RelativePanel.AlignLeftWith="EmailText"
                                                   RelativePanel.Below="EmailText" />
                                    </RelativePanel>
                                </ListViewItem>
                                <ListViewItem Tapped="SettingsItem_ItemClick">
                                    <StackPanel HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Orientation="Horizontal">
                                        <Viewbox MaxHeight="18"
                                                 MaxWidth="18">
                                            <SymbolIcon Foreground="{ThemeResource ApplicationForegroundThemeBrush}" 
                                                    Symbol="Setting" />
                                        </Viewbox>
                                        <TextBlock Margin="15 0 0 0"
                                                   FontSize="13"
                                                   VerticalAlignment="Center"
                                                   Foreground="{ThemeResource ApplicationForegroundThemeBrush}"
                                                   Text="Settings" />
                                    </StackPanel>
                                </ListViewItem>
                            </ListView>
                        </RelativePanel>
                    </Grid>

                </SplitView.Pane>
                <SplitView.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border x:Name="BlurBorder" Grid.RowSpan="2"/>
                        <control:CustomFrame x:Name="mainFrame"
                                             Grid.Row="0"
                                             Navigated="{x:Bind ViewModel.MainFrame_Navigated}" />
                        <AD:AdControl x:Name="adControlDesktop"
                                      Grid.Row="1"
                                      Width="728"
                                      Height="90"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Bottom"
                                      AdUnitId="00000000"
                                      ApplicationId="00000000-0000-0000-0000-000000000000"
                                      AutoRefreshIntervalInSeconds="60"
                                      IsAutoRefreshEnabled="True" />
                        <AD:AdControl x:Name="adControlMobile"
                                      Grid.Row="1"
                                      Width="320"
                                      Height="50"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Bottom"
                                      AdUnitId="00000000"
                                      ApplicationId="00000000-0000-0000-0000-000000000000"
                                      AutoRefreshIntervalInSeconds="60"
                                      IsAutoRefreshEnabled="True" />
                    </Grid>
                </SplitView.Content>
            </SplitView>
            <Grid x:Name="BottomAppBar"
                  Grid.Row="2"
                  Height="44"
                  Background="{ThemeResource SystemChromeLowColor}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Height="46"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.AppBarNewsFeed_Tapped}">
                    <Path Grid.Column="4"
                              Margin="0 0 0 4"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M7 1C3.14 1 0 4.14 0 8s3.14 7 7 7c.48 0 .94-.05 1.38-.14-.17-.08-.2-.73-.02-1.09.19-.41.81-1.45.2-1.8-.61-.35-.44-.5-.81-.91-.37-.41-.22-.47-.25-.58-.08-.34.36-.89.39-.94.02-.06.02-.27 0-.33 0-.08-.27-.22-.34-.23-.06 0-.11.11-.2.13-.09.02-.5-.25-.59-.33-.09-.08-.14-.23-.27-.34-.13-.13-.14-.03-.33-.11s-.8-.31-1.28-.48c-.48-.19-.52-.47-.52-.66-.02-.2-.3-.47-.42-.67-.14-.2-.16-.47-.2-.41-.04.06.25.78.2.81-.05.02-.16-.2-.3-.38-.14-.19.14-.09-.3-.95s.14-1.3.17-1.75c.03-.45.38.17.19-.13-.19-.3 0-.89-.14-1.11-.13-.22-.88.25-.88.25.02-.22.69-.58 1.16-.92.47-.34.78-.06 1.16.05.39.13.41.09.28-.05-.13-.13.06-.17.36-.13.28.05.38.41.83.36.47-.03.05.09.11.22s-.06.11-.38.3c-.3.2.02.22.55.61s.38-.25.31-.55c-.07-.3.39-.06.39-.06.33.22.27.02.5.08.23.06.91.64.91.64-.83.44-.31.48-.17.59.14.11-.28.3-.28.3-.17-.17-.19.02-.3.08-.11.06-.02.22-.02.22-.56.09-.44.69-.42.83 0 .14-.38.36-.47.58-.09.2.25.64.06.66-.19.03-.34-.66-1.31-.41-.3.08-.94.41-.59 1.08.36.69.92-.19 1.11-.09.19.1-.06.53-.02.55.04.02.53.02.56.61.03.59.77.53.92.55.17 0 .7-.44.77-.45.06-.03.38-.28 1.03.09.66.36.98.31 1.2.47.22.16.08.47.28.58.2.11 1.06-.03 1.28.31.22.34-.88 2.09-1.22 2.28-.34.19-.48.64-.84.92s-.81.64-1.27.91c-.41.23-.47.66-.66.8 3.14-.7 5.48-3.5 5.48-6.84 0-3.86-3.14-7-7-7L7 1zm1.64 6.56c-.09.03-.28.22-.78-.08-.48-.3-.81-.23-.86-.28 0 0-.05-.11.17-.14.44-.05.98.41 1.11.41.13 0 .19-.13.41-.05.22.08.05.13-.05.14zM6.34 1.7c-.05-.03.03-.08.09-.14.03-.03.02-.11.05-.14.11-.11.61-.25.52.03-.11.27-.58.3-.66.25zm1.23.89c-.19-.02-.58-.05-.52-.14.3-.28-.09-.38-.34-.38-.25-.02-.34-.16-.22-.19.12-.03.61.02.7.08.08.06.52.25.55.38.02.13 0 .25-.17.25zm1.47-.05c-.14.09-.83-.41-.95-.52-.56-.48-.89-.31-1-.41-.11-.1-.08-.19.11-.34.19-.15.69.06 1 .09.3.03.66.27.66.55.02.25.33.5.19.63h-.01z"
                              Fill="{ThemeResource ApplicationForegroundThemeBrush}">
                        <Path.RenderTransform>
                            <CompositeTransform ScaleX="1.3" ScaleY="1.3" />
                        </Path.RenderTransform>
                    </Path>

                </Button>
                <Button Grid.Column="1"
                        Height="46"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.AppBarMyOrganizations_Tapped}">

                    <Path Margin="0 0 0 4"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M16 12.999c0 .439-.45 1-1 1H7.995c-.539 0-.994-.447-.995-.999H1c-.54 0-1-.561-1-1 0-2.634 3-4 3-4s.229-.409 0-1c-.841-.621-1.058-.59-1-3 .058-2.419 1.367-3 2.5-3s2.442.58 2.5 3c.058 2.41-.159 2.379-1 3-.229.59 0 1 0 1s1.549.711 2.42 2.088C9.196 9.369 10 8.999 10 8.999s.229-.409 0-1c-.841-.62-1.058-.59-1-3 .058-2.419 1.367-3 2.5-3s2.437.581 2.495 3c.059 2.41-.158 2.38-1 3-.229.59 0 1 0 1s3.005 1.366 3.005 4"
                              Fill="{ThemeResource ApplicationForegroundThemeBrush}">
                        <Path.RenderTransform>
                            <CompositeTransform ScaleX="1.3" ScaleY="1.3" />
                        </Path.RenderTransform>
                    </Path>

                </Button>
                <Button Grid.Column="2"
                        Height="46"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.AppBarTrending_Tapped}">
                    <Path Margin="0 0 0 4"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="F0 M12,16z M0,0z M5.05,0.31C5.86,2.48 5.46,3.69 4.53,4.62 3.55,5.67 1.98,6.45 0.9,7.98 -0.55,10.03 -0.8,14.51 4.43,15.68 2.23,14.52 1.76,11.16 4.13,9.07 3.52,11.1 4.66,12.4 6.07,11.93 7.46,11.46 8.37,12.46 8.34,13.6 8.32,14.38 8.03,15.04 7.21,15.41 10.63,14.82 11.99,11.99 11.99,9.85 11.99,7.01 9.46,6.63 10.74,4.24 9.22,4.37 8.71,5.37 8.85,6.99 8.94,8.07 7.83,8.79 6.99,8.32 6.32,7.91 6.33,7.13 6.93,6.54 8.18,5.31 8.68,2.45 5.05,0.32L5.03,0.3 5.05,0.31z"
                              Fill="{ThemeResource ApplicationForegroundThemeBrush}">
                        <Path.RenderTransform>
                            <CompositeTransform ScaleX="1.3" ScaleY="1.3" />
                        </Path.RenderTransform>
                    </Path>

                </Button>
                <Button Grid.Column="3"
                        Height="46"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.AppBarMyRepos_Tapped}">
                    <Path Grid.Column="3"
                              Margin="0 0 0 4"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="F0 M12,16z M0,0z M4,9L3,9 3,8 4,8 4,9z M4,6L3,6 3,7 4,7 4,6z M4,4L3,4 3,5 4,5 4,4z M4,2L3,2 3,3 4,3 4,2z M12,1L12,13C12,13.55,11.55,14,11,14L6,14 6,16 4.5,14.5 3,16 3,14 1,14C0.45,14,0,13.55,0,13L0,1C0,0.45,0.45,0,1,0L11,0C11.55,0,12,0.45,12,1z M11,11L1,11 1,13 3,13 3,12 6,12 6,13 11,13 11,11z M11,1L2,1 2,10 11,10 11,1z"
                              Fill="{ThemeResource ApplicationForegroundThemeBrush}">
                        <Path.RenderTransform>
                            <CompositeTransform ScaleX="1.3" ScaleY="1.3" />
                        </Path.RenderTransform>
                    </Path>

                </Button>
                <Button Grid.Column="4"
                        Height="46"
                        HorizontalAlignment="Stretch"
                        Style="{StaticResource ActionButtonStyle}"
                        Tapped="{x:Bind ViewModel.NavigateToSettings}">

                    <SymbolIcon Foreground="{ThemeResource ApplicationForegroundThemeBrush}" 
                                    Symbol="Setting" />

                </Button>
            </Grid>
        </Grid>

        <control:SignInPage x:Name="SignInPage"
                            SignInCommand="{x:Bind ViewModel.SignInCommand}"
                            Visibility="{x:Bind ViewModel.isLoggedin, Converter={StaticResource ReverseBooleanToVisibilityConverter}, Mode=OneWay}" />

        <control:BusyScreen x:Name="busyScreen"
                            Grid.RowSpan="2"
                            BusyText="{x:Bind ViewModel.BusyScreenText, Mode=OneWay, TargetNullValue='Loading...'}"
                            IsBusy="True"
                            Visibility="{x:Bind ViewModel.isLoading, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" />
        <Grid x:Name="NotificationGrid" />

    </Grid>

</Page>
